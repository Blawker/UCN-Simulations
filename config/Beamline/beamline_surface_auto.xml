<!--
<define name="sim_dir_name" value="Excercise2"/>
<define name="simbase_dir" value="/Users/christianschmidt/Uni/tSPECT/Simulation/Internship_Guilbaud"/>
-->
<!--define name="cache_dir" value="[simbase_dir]/KEMFieldCache"/-->
<!--
<external_define name="output_dir" value="[simbase_dir]/[sim_dir_name]/output"/>
<external_define name="input_dir" value="[simbase_dir]/[sim_dir_name]/input"/>
-->
<!--define name="geometry_dir" value="[simbase_dir]/tSPECTGeometry"/-->

<!--
<define name="output_path" value="[output_dir]"/>
<define name="log_path" value="[output_dir]"/>
<define name="input_path" value="[input_dir]"/>
-->

<!--
Created the 19. June 2020
Author: Thomas Guilbaud
Version: 2.1
Modified beamline_surface.xml to include input from the command line. This config
file can be automate with differenet seed and different output file.
-->

<!-- Input for the command line, use for example:
      Kassiopeia.app/ config_file.xml -r random_seed=81300 output_file_name=out.root -->
<external_define name="random_seed" value="81300"/>
<external_define name="output_file_name" value="beamline_surface_auto_simulation_triga_1.root"/>

<define name="output_path" value="[KASPERSYS]/../../Stage 2A - UCN - 2020/UCN-Simulations/output/Beamline/auto_parallel"/>
<define name="log_path" value="[KASPERSYS]/../../Stage 2A - UCN - 2020/UCN-Simulations/log/Beamline"/>
<define name="input_path" value="[KASPERSYS]/../../Stage 2A - UCN - 2020/UCN-Simulations/config/Spectrum"/>


<!--messages>
  <file path="[log_path]" base="Beamline_log.txt"/>

  <message key="k_file" terminal="normal" log="warning"/>
  <message key="k_initialization" terminal="normal" log="warning"/>

  <message key="kg_core" terminal="normal" log="warning"/>
  <message key="kg_shape" terminal="normal" log="warning"/>
  <message key="kg_mesh" terminal="normal" log="warning"/>
  <message key="kg_axial_mesh" terminal="normal" log="warning"/>

  <message key="ks_object" terminal="normal" log="normal"/>
  <message key="ks_operator" terminal="normal" log="normal"/>
  <message key="ks_field" terminal="normal" log="normal"/>
  <message key="ks_geometry" terminal="normal" log="normal"/>
  <message key="ks_generator" terminal="normal" log="normal"/>
  <message key="ks_trajectory" terminal="debug" log="normal"/>
  <message key="ks_interaction" terminal="debug" log="normal"/>
  <message key="ks_navigator" terminal="debug" log="normal"/>
  <message key="ks_terminator" terminal="normal" log="normal"/>
  <message key="ks_writer" terminal="normal" log="normal"/>
  <message key="ks_main" terminal="normal" log="normal"/>
  <message key="ks_run" terminal="normal" log="normal"/>
  <message key="ks_event" terminal="normal" log="normal"/>
  <message key="ks_track" terminal="normal" log="normal"/>
  <message key="ks_step" terminal="debug" log="normal"/>
</messages-->

<geometry>
  <!-- Major Parameters of the Beamline -->
  <define name="inner_diameter" value="66.e-3"/> <!-- Inner diameter of the tubes = 66 mm -->
  <define name="outer_diameter" value="70.e-3"/> <!-- Outer diameter of the tubes = 70 mm -->

  <define name="bend1_radii" value="25.e-2"/> <!-- Bend radii of the bend1 shape = 25 cm -->
  <define name="bend2_radii" value="40.e-2"/> <!-- Bend radii of the bend2 shape = 40 cm -->
  <define name="bend3_radii" value="8.e-2"/> <!-- Bend radii of the bend3 shape = 8 cm -->

  <define name="bend1_angle" value="45."/> <!-- Bend angle of the bend1 shape = 45°-->
  <define name="bend2_angle" value="45."/> <!--Bend angle of the bend2 shape = 45° -->
  <define name="bend3_angle" value="90."/> <!--Bend angle of the bend3 shape = 90° -->

  <define name="tube1_length" value="70.e-2"/> <!--Length of the tube1 cylinder = 70 cm -->
  <define name="tube2_length" value="28.e-2"/> <!--Length of the tube2 cylinder = 28 cm -->
  <define name="tube3_length" value="44.e-2"/> <!--Length of the tube3 cylinder = 44 cm -->
  <define name="tube4_length" value="32.e-2"/> <!--Length of the tube4 cylinder = 32 cm -->

  <!-- Coordinnates of the point, based on the Figure 3 of the report -->
  <define name="P1x" value="{[bend1_radii]*TMath::Sin([bend1_angle]*TMath::Pi()/180)}"/>
  <define name="P1y" value="{-[bend1_radii]*TMath::Cos([bend1_angle]*TMath::Pi()/180)+[bend1_radii]}"/>
  <define name="P2x" value="{[tube1_length]*TMath::Cos([bend1_angle]*TMath::Pi()/180)+[P1x]}"/>
  <define name="P2y" value="{[tube1_length]*TMath::Sin([bend1_angle]*TMath::Pi()/180)+[P1y]}"/>
  <define name="P3x" value="{[tube2_length]*TMath::Cos([bend1_angle]*TMath::Pi()/180)+[P2x]}"/>
  <define name="P3y" value="{[tube2_length]*TMath::Sin([bend1_angle]*TMath::Pi()/180)+[P2y]}"/>
  <define name="P4x" value="{-[bend2_radii]*TMath::Sin([bend1_angle]*TMath::Pi()/180)+[P3x]}"/>
  <define name="P4y" value="{[bend2_radii]*TMath::Cos([bend1_angle]*TMath::Pi()/180)+[P3y]}"/>
  <define name="P5x" value="{[bend2_radii]*TMath::Sin(([bend1_angle]+[bend2_angle])*TMath::Pi()/180)+[P4x]}"/>
  <define name="P5y" value="{-[bend2_radii]*TMath::Cos(([bend1_angle]+[bend2_angle])*TMath::Pi()/180)+[P4y]}"/>
  <define name="P6x" value="{[tube3_length]*TMath::Cos(([bend1_angle]+[bend2_angle])*TMath::Pi()/180)+[P5x]}"/>
  <define name="P6y" value="{[tube3_length]*TMath::Sin(([bend1_angle]+[bend2_angle])*TMath::Pi()/180)+[P5y]}"/>
  <define name="P7x" value="{[bend3_radii]*TMath::Sin(([bend1_angle]+[bend2_angle])*TMath::Pi()/180)+[P6x]}"/>
  <define name="P7y" value="{-[bend3_radii]*TMath::Cos(([bend1_angle]+[bend2_angle])*TMath::Pi()/180)+[P6y]}"/>
  <define name="P8x" value="{[bend3_radii]*TMath::Sin(([bend3_angle]-[bend1_angle]-[bend2_angle])*TMath::Pi()/180)+[P7x]}"/>
  <define name="P8y" value="{[bend3_radii]*TMath::Cos(([bend3_angle]-[bend1_angle]-[bend2_angle])*TMath::Pi()/180)+[P7y]}"/>
  <define name="P9x" value="{[tube4_length]*TMath::Cos(([bend3_angle]-[bend1_angle]-[bend2_angle])*TMath::Pi()/180)+[P8x]}"/>
  <define name="P9y" value="{-[tube4_length]*TMath::Sin(([bend3_angle]-[bend1_angle]-[bend2_angle])*TMath::Pi()/180)+[P8y]}"/>


  <!-- World -->
  <cylinder_space name="world_space" z1="-0.2" z2="1.8" r="2."/>
  <!--box_space name="world_space" xa="-0.01" ya="-0.1" za="{-[outer_diameter]*1.01}" xb="1.5" yb="0.1" zb="1.7"/-->

  <!-- Shell Surface -->
  <tag name="inner_bend_tag">
    <shell_circle_surface name="inner_shell_circle_1_surface" angle_start="0" angle_stop="[bend1_angle]" shell_mesh_count="32" shell_mesh_power="6">
      <circle x="0." y="[bend1_radii]" radius="{[inner_diameter]/2}" circle_mesh_count="32"/>
    </shell_circle_surface>
    <shell_circle_surface name="inner_shell_circle_2_surface" angle_start="0" angle_stop="[bend2_angle]" shell_mesh_count="32" shell_mesh_power="6">
      <circle x="0." y="[bend2_radii]" radius="{[inner_diameter]/2}" circle_mesh_count="32"/>
    </shell_circle_surface>
    <shell_circle_surface name="inner_shell_circle_3_surface" angle_start="0" angle_stop="[bend3_angle]" shell_mesh_count="32" shell_mesh_power="6">
      <circle x="0." y="[bend3_radii]" radius="{[inner_diameter]/2}" circle_mesh_count="32"/>
    </shell_circle_surface>
  </tag>

  <!-- Cylinder Surface -->
  <tag name="cylinder_surface_tag">
    <cylinder_surface
      name="tube1_surface"
      z1="0."
      z2="[tube1_length]"
      r="{[inner_diameter]/2}"
    />
    <cylinder_surface
      name="tube2_surface"
      z1="0."
      z2="[tube2_length]"
      r="{[inner_diameter]/2}"
    />
    <cylinder_surface
      name="tube3_surface"
      z1="0."
      z2="[tube3_length]"
      r="{[inner_diameter]/2}"
    />
    <cylinder_surface
      name="tube4_surface"
      z1="0."
      z2="[tube4_length]"
      r="{[inner_diameter]/2}"
    />
  </tag>

  <!-- Cylinder Space -->
  <tag name="cylinder_tag">
    <cylinder_space name="cylinder_space" r="{[inner_diameter]/2}" z1="0." z2="0.05"/>
  </tag>

  <!-- Outer World Space -->
  <tag name="outer_world_tag">
    <cylinder_space name="cylinder_world_space" r="2." z1="-0.05" z2="0.05"/>
    <cylinder_tube_space name="cylinder_tube_world_space" z1="-0.1" z2="1.7" r1="1.9" r2="2."/>
  </tag>

  <!-- Detector Cover Space -->
  <tag name="detector_cover_tag">
    <cylinder_tube_space name="cylinder_tube_cover_space" z1="-0.05" z2="0.05" r1="{1.001*[inner_diameter]/2}" r2="[inner_diameter]"/>
    <cylinder_space name="cylinder_cover_space" r="[inner_diameter]" z1="0.05" z2="0.1"/>
  </tag>

  <!-- Disk Surface -->
  <tag name="disk_join_tag">
    <disk_surface name="disk_join_surface" r="{[inner_diameter]/2}" z="0."/>
  </tag>


  <!-- Beamline Tube Assembly -->
  <space name="beamline_tube_assembly">
    <!-- Bend Part -->
    <surface name="bend1" node="inner_shell_circle_1_surface">
      <transformation displacement="0. [bend1_radii] 0."
                      rotation_euler="-90. 0. 0."/>
    </surface>
    <surface name="bend2" node="inner_shell_circle_2_surface">
      <transformation displacement="[P4x] [P4y] 0."
                      rotation_euler="{[bend1_angle]-90.} 0. 0"/>
    </surface>
    <surface name="bend3" node="inner_shell_circle_3_surface">
      <transformation displacement="[P7x] [P7y] 0."
                      rotation_euler="{[bend1_angle]+[bend2_angle]} 180. -90"/>
    </surface>
    <!-- Tube Part -->
    <surface name="tube1" node="tube1_surface">
      <transformation displacement="[P1x] [P1y] 0."
                      rotation_euler="{90+[bend1_angle]} 90. 0."/>
    </surface>
    <surface name="tube2" node="tube2_surface">
      <transformation displacement="[P2x] [P2y] 0."
                      rotation_euler="{90+[bend1_angle]} 90. 0."/>
    </surface>
    <surface name="tube3" node="tube3_surface">
      <transformation displacement="[P5x] [P5y] 0."
                      rotation_euler="{90+[bend1_angle]+[bend2_angle]} 90. 0."/>
    </surface>
    <surface name="tube4" node="tube4_surface">
      <transformation displacement="[P8x] [P8y] 0."
                      rotation_euler="{90+[bend1_angle]+[bend2_angle]-[bend3_angle]} 90. 0."/>
    </surface>
  </space>

  <!-- Disk Sample Assembly -->
  <!--space name="disk_sample_assembly">
    <surface name="disk_sample_P1" node="disk_join_surface">
      <transformation displacement="[P1x] [P1y] 0."
                      rotation_euler="{90+[bend1_angle]} 90. 0."/>
    </surface>
    <surface name="disk_sample_P2" node="disk_join_surface">
      <transformation displacement="[P2x] [P2y] 0."
                      rotation_euler="{90+[bend1_angle]} 90. 0."/>
    </surface>
    <surface name="disk_sample_P3" node="disk_join_surface">
      <transformation displacement="[P3x] [P3y] 0."
                      rotation_euler="{90+[bend1_angle]} 90. 0."/>
    </surface>
    <surface name="disk_sample_P5" node="disk_join_surface">
      <transformation displacement="[P5x] [P5y] 0."
                      rotation_euler="{90+[bend1_angle]+[bend2_angle]} 90. 0."/>
    </surface>
    <surface name="disk_sample_P6" node="disk_join_surface">
      <transformation displacement="[P6x] [P6y] 0."
                      rotation_euler="{90+[bend1_angle]+[bend2_angle]} 90. 0."/>
    </surface>
    <surface name="disk_sample_P8" node="disk_join_surface">
      <transformation displacement="[P8x] [P8y] 0."
                      rotation_euler="{90+[bend1_angle]+[bend2_angle]-[bend3_angle]} 90. 0."/>
    </surface>
    <surface name="disk_sample_P9" node="disk_join_surface"> < Exit surface >
      <transformation displacement="[P9x] [P9y] 0."
                      rotation_euler="{90+[bend1_angle]+[bend2_angle]-[bend3_angle]} 90. 0."/>
    </surface>
  </space-->

  <!-- Detector Cover Assembly -->
  <space name="detector_cover_assembly">
    <space name="radial_cover" node="cylinder_tube_cover_space"/>
    <space name="bottom_cover" node="cylinder_cover_space"/>
  </space>

  <!-- Boundary Assembly -->
  <space name="boundary_assembly">
    <space name="exit_cylinder" node="cylinder_space">
      <transformation displacement="[P9x] [P9y] 0."
                      rotation_euler="{90+[bend1_angle]+[bend2_angle]-[bend3_angle]} 90. 0."/>
    </space>
    <space name="detector_cover" tree="detector_cover_assembly">
      <transformation displacement="[P9x] [P9y] 0."
                      rotation_euler="{90+[bend1_angle]+[bend2_angle]-[bend3_angle]} 90. 0."/>
    </space>
    <space name="entry_cylinder" node="cylinder_space">
      <transformation displacement="0. 0. 0."
                      rotation_euler="90. -90. 0."/>
    </space>
    <!-- Surface Entry (Surface UCN Generator) -->
    <surface name="entry_disk" node="disk_join_surface">
      <transformation rotation_euler="90. 90. 0."/>
    </surface>
  </space>

  <!-- Outer World Assembly -->
  <space name="outer_world_assembly">
    <space name="lower_world_cylinder" node="cylinder_world_space">
      <transformation displacement="0. 0. -0.1"/>
    </space>
    <space name="upper_world_cylinder" node="cylinder_world_space">
      <transformation displacement="0. 0. 1.7"/>
    </space>
    <space name="lateral_world_cylinder" node="cylinder_tube_world_space"/>
  </space>


  <!-- Beamline Assembly -->
  <space name="beamline_assembly">
    <space name="beamline_tube" tree="beamline_tube_assembly">
      <transformation rotation_euler="0. 90. 0."/>
    </space>
    <!--space name="surface_sample" tree="disk_sample_assembly">
      <transformation rotation_euler="0. 90. 0."/>
    </space-->
    <!-- To determine if a neutron as enough energy to reach the top of the beamline -->
    <space name="spectrometer" node="cylinder_space">
      <transformation rotation_euler="90. 90. 0."/>
    </space>
    <space name="boundary" tree="boundary_assembly">
      <transformation rotation_euler="0. 90. 0."/>
    </space>
  </space>


  <!-- World Assembly -->
  <space name="world" node="world_space">
    <space name="beamline" tree="beamline_assembly"/>
    <space name="outer_world" tree="outer_world_assembly"/>
  </space>

  <!-- Appearance -->
  <!-- Boundary Space -->
  <appearance name="app_entry_cylinder" color="255 127 0 127" arc="4096" surfaces="world/beamline/boundary/entry_cylinder/#"/>
  <appearance name="app_exit_cylinder" color="0 255 127 127" arc="4096" surfaces="world/beamline/boundary/exit_cylinder/#"/>

  <!-- Surface Sample -->
  <!--appearance name="app_disk_join" color="255 127 0 127" arc="4096" surfaces="world/beamline/@disk_join_tag"/-->
</geometry>


<kassiopeia>

  <!-- Generator -->
  <define name="T" value="5.13e-3"/> <!-- Temperature in K -->
  <define name="k" value="1.38e-23"/> <!-- Boltzmann Constant -->
  <define name="e" value="1.602e-19"/> <!-- Coulomb charge -->
  <define name="beta" value="{[k]*[T]/[e]}"/>
  <ksgen_generator_composite name="generator_uniform" pid="2112">
    <energy_composite>
      <!-- Boltzmann distribution of the energy of UCN -->
      <!--energy_formula value_min="1.30e-7" value_max="3.2e-7"
                      value_formula="2*TMath::Sqrt(x/TMath::Pi())*(1/([beta]*[e]))^(3/2)*exp(-x/[beta])"/-->
      <energy_histogram path="[input_path]"
        base="triga_neutron_spectrum_gr.root" histogram="hke_triga"/>
    </energy_composite>
    <position_rectangular_composite> <!-- Initial position at the origin, entry of the beamline -->
      <x_fix value="0.01"/>
      <y_uniform value_min="{-[inner_diameter]/2+0.001}" value_max="{[inner_diameter]/2-0.001}"/>
      <z_uniform value_min="{-[inner_diameter]/2+0.001}" value_max="{[inner_diameter]/2-0.001}"/>
    </position_rectangular_composite>
    <time_composite>
      <time_fix value="0."/>
    </time_composite>
    <direction_spherical_composite> <!-- Direction pointed inside the beamline -->
      <theta_spherical angle_min="45." angle_max="135."/>
      <phi_uniform value_min="-45." value_max="45."/>
    </direction_spherical_composite>
  </ksgen_generator_composite>


  <!-- Trajectories -->
  <kstraj_trajectory_exact name="trajectory_exact">
    <interpolator_fast name="interpolator_fast"/>
    <integrator_rk86 name="integrator_rk86"/>
    <term_propagation name="term_propagation"/>
    <term_gravity name="term_gravity" gravity="0. 0. -9.8"/>
    <control_time name="control_time" time="1.e-5"/>
  </kstraj_trajectory_exact>

  <!-- Space Navigators -->
  <ksnav_space name="nav_space" enter_split="false" exit_split="false"/>

  <!-- Surface Navigators -->
  <ksnav_surface name="nav_surface" transmission_split="false" reflection_split="false"/>


  <!-- Interactions -->
    <!-- Surface Reflection Interaction for Stainless Steel -->
    <!--  eta: loss per bounce,                          alpha: spin depolarization,
          real_optical_potential: fermi potential (eV),  correlation_length: roughness (m) -->
  <ksint_surface_UCN name="int_surface_UCN"
    eta="2.e-4"
    alpha="5.e-6"
    real_optical_potential="2.08e-7"
    correlation_length="20.e-9"/>


  <!-- Terminators -->
  <ksterm_death name="term_world"/>
  <ksterm_death name="term_entry_beamline"/>
  <ksterm_death name="term_cover_beamline"/>
  <ksterm_death name="term_detector_beamline"/>
  <ksterm_min_energy name="term_min_energy" energy="130e-9"/>
  <!--ksterm_min_z name="term_min_z" z="{-[outer_diameter]}"/-->
  <!--ksterm_max_z name="term_max_z" z="{[outer_diameter]}"/-->
  <ksterm_max_steps name="term_max_steps" steps="10000000"/>


  <!-- Writers -->
  <kswrite_root name="write_root" path="[output_path]" base="[output_file_name]"/>
  <kswrite_vtk name="write_vtk" path="[output_path]" base="beamline_simulation"/>


  <!-- Outputs -->
    <!-- Track -->
    <ks_component_member name="component_track_initial_particle" field="initial_particle" parent="track"/>
    <ks_component_member name="component_track_final_particle" field="final_particle" parent="track"/>

    <ks_component_group name="component_track_world_success">
      <component_member name="creator_name" field="creator_name" parent="track"/>
      <component_member name="terminator_name" field="terminator_name" parent="track"/>
      <component_member name="total_steps" field="total_steps" parent="track"/>
      <component_member name="initial_time" field="time" parent="component_track_initial_particle"/>
      <component_member name="initial_position" field="position" parent="component_track_initial_particle"/>
      <component_member name="initial_kinetic_energy" field="kinetic_energy_ev" parent="component_track_initial_particle"/>
      <component_member name="final_time" field="time" parent="component_track_final_particle"/>
      <component_member name="final_position" field="position" parent="component_track_final_particle"/>
      <component_member name="final_kinetic_energy" field="kinetic_energy_ev" parent="component_track_final_particle"/>
    </ks_component_group>

    <ks_component_group name="component_track_world_Emin">
      <component_member name="creator_name" field="creator_name" parent="track"/>
      <component_member name="terminator_name" field="terminator_name" parent="track"/>
      <component_member name="total_steps" field="total_steps" parent="track"/>
      <component_member name="initial_time" field="time" parent="component_track_initial_particle"/>
      <component_member name="initial_position" field="position" parent="component_track_initial_particle"/>
      <component_member name="initial_kinetic_energy" field="kinetic_energy_ev" parent="component_track_initial_particle"/>
      <component_member name="final_time" field="time" parent="component_track_final_particle"/>
      <component_member name="final_position" field="position" parent="component_track_final_particle"/>
      <component_member name="final_kinetic_energy" field="kinetic_energy_ev" parent="component_track_final_particle"/>
    </ks_component_group>

    <ks_component_group name="component_track_world">
      <component_member name="creator_name" field="creator_name" parent="track"/>
      <component_member name="terminator_name" field="terminator_name" parent="track"/>
      <component_member name="total_steps" field="total_steps" parent="track"/>
      <component_member name="initial_time" field="time" parent="component_track_initial_particle"/>
      <component_member name="initial_position" field="position" parent="component_track_initial_particle"/>
      <component_member name="initial_kinetic_energy" field="kinetic_energy_ev" parent="component_track_initial_particle"/>
      <component_member name="final_time" field="time" parent="component_track_final_particle"/>
      <component_member name="final_position" field="position" parent="component_track_final_particle"/>
      <component_member name="final_kinetic_energy" field="kinetic_energy_ev" parent="component_track_final_particle"/>
    </ks_component_group>

    <!-- Step -->

  <!-- Structure -->
  <ksgeo_space name="space_world" spaces="world">
    <command parent="root_terminator" field="add_terminator" child="term_max_steps"/>
    <command parent="root_terminator" field="remove_terminator" child="term_world"/>

    <command parent="write_root" field="add_track_output" child="component_track_world"/>
    <!--command parent="write_root" field="add_step_output" child="component_step_world"/-->

    <!-- Stop and save the track because not enough at the initial time -->
    <geo_space name="not_enough_initial_ke" spaces="world/beamline/spectrometer">
      <command parent="root_terminator" field="add_terminator" child="term_min_energy"/>
      <command parent="write_root" field="add_track_output" child="component_track_world_Emin"/>
    </geo_space>

    <!-- Stop track when reach the surface sample P9 (the end of the beamline) -->
    <geo_space name="exit_detector" spaces="world/beamline/boundary/exit_cylinder">
      <command parent="root_terminator" field="add_terminator" child="term_detector_beamline"/>
      <command parent="write_root" field="add_track_output" child="component_track_world_success"/>
    </geo_space>

    <!-- Stop track when reach the entry of the beamline -->
    <geo_space name="entry_detector" spaces="world/beamline/boundary/entry_cylinder">
      <command parent="root_terminator" field="add_terminator" child="term_entry_beamline"/>
    </geo_space>

    <geo_space name="exit_cover_detector" spaces="world/beamline/boundary/detector_cover/#">
      <command parent="root_terminator" field="add_terminator" child="term_cover_beamline"/>
    </geo_space>

    <geo_space name="exit_world" spaces="world/outer_world/#">
      <command parent="root_terminator" field="add_terminator" child="term_world"/>
    </geo_space>

    <!-- Surface reflection of the UCN -->
    <geo_surface name="surface_reflection" surfaces="world/beamline/beamline_tube/#">
      <command parent="root_surface_interaction" field="set_surface_interaction" child="int_surface_UCN"/>
    </geo_surface>
  </ksgeo_space>


  <!-- Simulation -->
  <ks_simulation
    run="1"
    seed="[random_seed]"
    events="100000"
    space="space_world"
    generator="generator_uniform"
    trajectory="trajectory_exact"
    space_navigator="nav_space"
    surface_navigator="nav_surface"
    terminator="term_world"
    writer="write_root"
  />
</kassiopeia>
